{
    "topic_description": "novel prompting methods for large language models to improve mathematical problem solving",
    "idea_name": "Semantic Invariance Prompting",
    "raw_idea": {
        "Problem": "Large language models often struggle with solving math word problems that are semantically equivalent but differ in surface-level descriptions, indicating a lack of deeper understanding of the underlying mathematical concepts.",
        "Existing Methods": "Current methods like Chain-of-Thought prompting improve performance on math word problems, but still fall short in handling semantic variations of the same problem.",
        "Motivation": "Humans can easily recognize when two math problems are essentially the same despite differences in wording or context. We hypothesize that prompting LLMs to explicitly identify semantic equivalence between problems can help them generalize better and solve problems more reliably.",
        "Proposed Method": "We propose Semantic Invariance Prompting (SIP), which consists of three steps: 1) Given a math word problem, prompt the LLM to generate multiple semantic variations of the problem by changing the context, wording, or numerical values while preserving the underlying mathematical structure. 2) Prompt the LLM to identify the semantic equivalence between the original problem and its variations, and explain why they are mathematically the same. 3) Prompt the LLM to solve the original problem, using the understanding gained from recognizing the semantic invariance across variations.",
        "Experiment Plan": "Evaluate SIP on existing math word problem benchmarks like MATH and GSM8K, and compare with baselines like Chain-of-Thought prompting. Also create new test sets with semantic variations of problems to specifically measure the effectiveness of SIP in improving generalization."
    },
    "full_experiment_plan": {
        "Title": "Semantic Invariance Prompting: Improving Mathematical Problem Solving in Large Language Models",
        "Problem Statement": "Large language models often struggle with solving math word problems that are semantically equivalent but differ in surface-level descriptions, indicating a lack of deeper understanding of the underlying mathematical concepts.",
        "Motivation": "Current methods like Chain-of-Thought prompting improve performance on math word problems, but still fall short in handling semantic variations of the same problem. Humans can easily recognize when two math problems are essentially the same despite differences in wording or context. We hypothesize that prompting LLMs to explicitly identify semantic equivalence between problems can help them generalize better and solve problems more reliably.",
        "Proposed Method": "We propose Semantic Invariance Prompting (SIP), which consists of three steps: 1) Given a math word problem, prompt the LLM to generate multiple semantic variations of the problem by changing the context, wording, or numerical values while preserving the underlying mathematical structure. 2) Prompt the LLM to identify the semantic equivalence between the original problem and its variations, and explain why they are mathematically the same. 3) Prompt the LLM to solve the original problem, using the understanding gained from recognizing the semantic invariance across variations.",
        "Step-by-Step Experiment Plan": {
            "Step 1: Gather Datasets": "Evaluate SIP on existing math word problem benchmarks like MATH and GSM8K. Also create new test sets with semantic variations of problems to specifically measure the effectiveness of SIP in improving generalization.",
            "Step 2: Construct Prompts": "Baseline prompts: 1) Direct: Provide only the math word problem. 2) Chain-of-Thought (CoT): Append 'Let's solve this step by step:' to the problem.\nSIP prompts: 1) Variation Generation: 'Generate 3 variations of this problem that preserve the underlying math but change the wording, context, or numerical values: <problem>'. 2) Equivalence Recognition: 'Are the following problems mathematically equivalent? Explain why or why not. Problem 1: <original>. Problem 2: <variation>.' 3) Problem Solving: 'Using the understanding that problems with different wordings can represent the same underlying math, let's solve the original problem step-by-step: <original>'.",
            "Step 3: Select Models": "Evaluate the prompts on GPT-3.5 (text-davinci-003), GPT-4, and PaLM models via API access.",
            "Step 4: Get Results": "For each model and dataset, generate responses using the baseline and SIP prompts. For SIP, first generate variations, then assess equivalence for each variation, and finally solve the original problem.",
            "Step 5: Analyze Results": "Compute accuracy of final problem solutions. Compare performance of direct prompting, CoT, and SIP. Measure SIP's impact on the custom test sets with semantic variations. Qualitatively analyze the generated variations and equivalence explanations."
        },
        "Test Case Examples": {
            "Original Problem": "A rectangular field has a length of 80 meters and a width of 30 meters. It needs to be fenced on three sides, leaving an opening on one of the short sides. The fencing costs $5 per meter. How much will it cost to fence the field?",
            "Baseline Prompt Input (Direct)": "<Original Problem>",
            "Baseline Prompt Expected Output (Direct)": "$550",
            "Baseline Prompt Input (CoT)": "<Original Problem>\nLet's solve this step by step:",
            "Baseline Prompt Expected Output (CoT)": "To find the cost of fencing, we need to:\n1. Calculate the perimeter of the field\n2. Subtract the width of the side without fencing\n3. Multiply the remaining length by the cost per meter\n\nPerimeter = 2 * (length + width)\n            = 2 * (80 + 30)\n            = 2 * 110\n            = 220 meters\n\nLength of fencing = Perimeter - width of unfenced side\n                    = 220 - 30\n                    = 190 meters\n                    \nCost of fencing = Length of fencing * Cost per meter\n                  = 190 * $5\n                  = $950\n\nTherefore, it will cost $950 to fence the field.",
            "Proposed Prompt Input (SIP Variation Generation)": "Generate 3 variations of this problem that preserve the underlying math but change the wording, context, or numerical values:\n<Original Problem>",
            "Proposed Prompt Expected Output (SIP Variation Generation)": "Variation 1: A rectangular garden has a length of 60 feet and a width of 20 feet. It needs to be enclosed with a fence on three sides, leaving an opening on one of the long sides. The fencing costs $8 per foot. What will be the total cost of fencing the garden?\n\nVariation 2: A contractor needs to put up a temporary fence around three sides of a construction site, leaving one of the shorter sides open for access. If the site is 120 meters long and 50 meters wide, and the fencing costs $3 per meter, how much will the contractor spend on fencing?\n\nVariation 3: A farmer wants to fence off a rectangular pasture that measures 200 yards by 90 yards. He plans to leave one of the shorter sides open for his livestock to enter and exit. If the fencing material costs $6 per yard, how much money will the farmer need to fence the pasture?",
            "Proposed Prompt Input (SIP Equivalence Recognition)": "Are the following problems mathematically equivalent? Explain why or why not.\n\nProblem 1: <Original Problem>\n\nProblem 2: <Variation 1>",
            "Proposed Prompt Expected Output (SIP Equivalence Recognition)": "Yes, these problems are mathematically equivalent. Although the context and numerical values are different, the underlying mathematical structure is the same:\n\n1. Both problems involve a rectangular area with a given length and width.\n2. In both cases, fencing is required on three sides of the rectangle, leaving one side open.\n3. The cost of fencing is provided per unit length.\n\nTo solve either problem, you would:\n1. Calculate the perimeter of the rectangle\n2. Subtract the length of the unfenced side\n3. Multiply the remaining length by the cost per unit length\n\nThe specific numbers and context may vary, but the mathematical steps to solve the problem are identical.",
            "Proposed Prompt Input (SIP Problem Solving)": "Using the understanding that problems with different wordings can represent the same underlying math, let's solve the original problem step-by-step:\n<Original Problem>",
            "Proposed Prompt Expected Output (SIP Problem Solving)": "To solve this problem, we can follow these steps:\n\n1. Calculate the perimeter of the rectangular field:\n   Perimeter = 2 * (length + width)\n             = 2 * (80 + 30)\n             = 2 * 110\n             = 220 meters\n\n2. Subtract the width of the unfenced side from the perimeter:\n   Length of fencing = Perimeter - width of unfenced side\n                     = 220 - 30\n                     = 190 meters\n\n3. Multiply the length of fencing by the cost per meter:\n   Cost of fencing = Length of fencing * Cost per meter\n                   = 190 * $5\n                   = $950\n\nTherefore, it will cost $950 to fence the rectangular field on three sides.\n\nThis solution applies the same mathematical principles as the equivalent problems with different wordings and values, demonstrating the semantic invariance of the underlying problem structure.",
            "Explanation": "The baseline direct prompting fails to provide the correct solution, while CoT prompting gets the right answer but uses a problem-specific approach. SIP encourages the model to recognize the semantic equivalence between problems and apply this understanding to solve the original problem, potentially improving generalization to new variations."
        },
        "Fallback Plan": "If SIP does not outperform the baselines, several analyses can be conducted:\n\n1. Evaluate the quality and diversity of the generated problem variations. Are they semantically equivalent to the original problem? Do they introduce meaningful changes in wording, context, or values?\n\n2. Assess the accuracy of the model's equivalence recognition. Does it correctly identify when variations are mathematically equivalent? Are the explanations sound?\n\n3. Examine cases where SIP fails but baselines succeed. What characteristics of these problems make them challenging for SIP?\n\n4. Investigate the impact of different variation generation strategies (e.g., changing only context vs. only values) on downstream performance.\n\nBased on these analyses, potential improvements could include:\n\n1. Fine-tuning the variation generation prompt to encourage more diverse and challenging variations.\n\n2. Incorporating additional prompts to guide the model in identifying specific mathematical concepts or solution steps.\n\n3. Exploring alternative prompting strategies that combine elements of SIP and CoT.\n\nIf SIP still underperforms after these modifications, the project could pivot to an in-depth analysis of the types of semantic variations that are most challenging for language models and the factors that contribute to their difficulty. This could yield valuable insights for future research on improving the robustness and generalization of mathematical problem-solving in language models."
    }
}