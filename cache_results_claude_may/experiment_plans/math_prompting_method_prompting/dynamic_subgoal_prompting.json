{
    "topic_description": "novel prompting methods for large language models to improve mathematical problem solving",
    "idea_name": "Dynamic Subgoal Prompting",
    "raw_idea": {
        "Problem": "Large language models struggle with complex multi-step mathematical reasoning problems that require identifying and solving multiple subgoals in a dynamic manner.",
        "Existing Methods": "Chain-of-thought prompting has shown promise in guiding step-by-step reasoning, but it relies on a fixed set of reasoning steps and can struggle with problems requiring a variable number of steps.",
        "Motivation": "Human problem-solving often involves dynamically identifying subgoals and recursively applying problem-solving strategies to each subgoal. We hypothesize that prompting language models to mimic this dynamic subgoal decomposition process could enable them to tackle more complex problems.",
        "Proposed Method": "We propose Dynamic Subgoal Prompting, where the model is prompted to: 1) Analyze the problem to identify relevant subgoals that need to be solved. 2) For each subgoal, recursively apply the same subgoal identification and problem-solving process. 3) Integrate the solutions to the subgoals to arrive at the final solution. The prompt includes examples demonstrating this recursive subgoal decomposition and encourages the model to flexibly adapt its reasoning steps based on the problem complexity.",
        "Experiment Plan": "Evaluate Dynamic Subgoal Prompting on the MATH benchmark which contains multistep problems. Compare to chain-of-thought prompting and baseline prompting methods. Assess both final answer accuracy as well as the correctness and coherence of the reasoning steps."
    },
    "full_experiment_plan": {
        "Title": "Dynamic Subgoal Prompting: Enabling Complex Multistep Reasoning in Large Language Models",
        "Problem Statement": "Large language models struggle with complex multi-step mathematical reasoning problems that require identifying and solving multiple subgoals in a dynamic manner.",
        "Motivation": "Chain-of-thought prompting has shown promise in guiding step-by-step reasoning, but it relies on a fixed set of reasoning steps and can struggle with problems requiring a variable number of steps. Human problem-solving often involves dynamically identifying subgoals and recursively applying problem-solving strategies to each subgoal. We hypothesize that prompting language models to mimic this dynamic subgoal decomposition process could enable them to tackle more complex problems.",
        "Proposed Method": "We propose Dynamic Subgoal Prompting, where the model is prompted to: 1) Analyze the problem to identify relevant subgoals that need to be solved. 2) For each subgoal, recursively apply the same subgoal identification and problem-solving process. 3) Integrate the solutions to the subgoals to arrive at the final solution. The prompt includes examples demonstrating this recursive subgoal decomposition and encourages the model to flexibly adapt its reasoning steps based on the problem complexity.",
        "Step-by-Step Experiment Plan": {
            "Step 1: Gather Datasets": "Evaluate Dynamic Subgoal Prompting on the MATH benchmark which contains multistep problems. Use the test set for final evaluation and a subset of the train set for prompt development.",
            "Step 2: Construct Prompts": "1) Baseline Prompts: a) Direct: Simply provide the question. b) Chain-of-Thought (CoT): Append 'Let's solve this step-by-step:' to the question. c) Self-Consistency: Sample multiple CoT paths and take the majority vote.\n2) Dynamic Subgoal Prompts: a) Include 3-5 few-shot examples demonstrating the subgoal decomposition process. Each example should have: the original question, identified subgoals, solutions to each subgoal, and the final integrated solution. b) End the prompt with 'For the given problem, identify the subgoals, solve each one, and integrate them for the final answer:' followed by the test question.",
            "Step 3: Select Models": "Evaluate the prompts on GPT-3.5 (text-davinci-003), GPT-4, and PaLM (via API if available or a smaller open-source version).",
            "Step 4: Collect Predictions": "For each test question: a) Get the direct prediction. b) Get the prediction with CoT prompting. c) For self-consistency, sample 10 CoT paths and take the majority prediction. d) Get the prediction with Dynamic Subgoal prompting.",
            "Step 5: Evaluate Results": "Compute the accuracy of each prompting method. Report the average accuracy and standard deviation across the test set. Perform significance tests to check if Dynamic Subgoal prompting outperforms baselines."
        },
        "Test Case Examples": {
            "Example 1": {
                "Test Question": "A factory has three machines - A, B, and C. Machine A takes 3 hours to produce 6 units, machine B takes 2 hours to produce 5 units, and machine C takes 6 hours to produce 8 units. All three machines work simultaneously. How many total units can be produced in 12 hours?",
                "Baseline CoT Prompt": "A factory has three machines - A, B, and C. Machine A takes 3 hours to produce 6 units, machine B takes 2 hours to produce 5 units, and machine C takes 6 hours to produce 8 units. All three machines work simultaneously. How many total units can be produced in 12 hours?\nLet's solve this step-by-step:",
                "Baseline CoT Output": "1. Find the rate of production for each machine:\nMachine A: 6 units / 3 hours = 2 units/hour\nMachine B: 5 units / 2 hours = 2.5 units/hour\nMachine C: 8 units / 6 hours = 1.33 units/hour\n2. Calculate the units produced by each machine in 12 hours:\nMachine A: 2 units/hour * 12 hours = 24 units\nMachine B: 2.5 units/hour * 12 hours = 30 units\nMachine C: 1.33 units/hour * 12 hours = 16 units\n3. Sum up the total units produced:\n24 + 30 + 16 = 70 units\nTherefore, the factory can produce a total of 70 units in 12 hours.",
                "Dynamic Subgoal Prompt": "A factory has three machines - A, B, and C. Machine A takes 3 hours to produce 6 units, machine B takes 2 hours to produce 5 units, and machine C takes 6 hours to produce 8 units. All three machines work simultaneously. How many total units can be produced in 12 hours?\nFor the given problem, identify the subgoals, solve each one, and integrate them for the final answer:",
                "Dynamic Subgoal Output": "To solve this problem, we need to break it down into subgoals:\n\nSubgoal 1: Determine the production rate of each machine.\nMachine A: 6 units / 3 hours = 2 units per hour\nMachine B: 5 units / 2 hours = 2.5 units per hour \nMachine C: 8 units / 6 hours = 1.33 units per hour\n\nSubgoal 2: Calculate the number of units each machine can produce in 12 hours.\nMachine A: 2 units/hour * 12 hours = 24 units\nMachine B: 2.5 units/hour * 12 hours = 30 units\nMachine C: 1.33 units/hour * 12 hours = 16 units\n\nSubgoal 3: Sum the total units produced by all machines in 12 hours.\n24 units (A) + 30 units (B) + 16 units (C) = 70 units total\n\nTherefore, the factory can produce a total of 70 units in 12 hours with all three machines working simultaneously.",
                "Explanation": "The Dynamic Subgoal prompt breaks down the problem into logical subgoals, solves each one separately, and integrates them for the final solution. This structured approach leads to the correct answer, while the baseline CoT prompt also solves it correctly but with less clear subgoal structure."
            },
            "Example 2": {
                "Test Question": "A school is organizing a field trip and they have 7 buses available. Each bus can seat 36 students. So far, 2/7 of the students have signed up for the trip. If 3/8 of the remaining students sign up, how many students will be going on the field trip?",
                "Baseline CoT Prompt": "A school is organizing a field trip and they have 7 buses available. Each bus can seat 36 students. So far, 2/7 of the students have signed up for the trip. If 3/8 of the remaining students sign up, how many students will be going on the field trip?\nLet's solve this step-by-step:",
                "Baseline CoT Output": "1. Find the total number of students the buses can accommodate:\n7 buses * 36 students per bus = 252 students\n2. Calculate the number of students already signed up:\n2/7 of 252 students = (2 * 252) / 7 = 72 students\n3. Find the number of remaining students:\n252 total students - 72 signed up = 180 remaining students\n4. Calculate how many of the remaining students will sign up:\n3/8 of 180 students = (3 * 180) / 8 = 67.5, round down to 67 students\n5. Find the total number of students going on the trip:\n72 already signed up + 67 more signing up = 139 students\nSo, 139 students will be going on the field trip.",
                "Dynamic Subgoal Prompt": "A school is organizing a field trip and they have 7 buses available. Each bus can seat 36 students. So far, 2/7 of the students have signed up for the trip. If 3/8 of the remaining students sign up, how many students will be going on the field trip?\nFor the given problem, identify the subgoals, solve each one, and integrate them for the final answer:",
                "Dynamic Subgoal Output": "Let's break this problem into subgoals:\n\nSubgoal 1: Determine the total capacity of the buses.\n7 buses with 36 seats each = 7 * 36 = 252 total seats\n\nSubgoal 2: Find how many students have already signed up.\nTotal capacity = 252 students\n2/7 of students have signed up\n2/7 of 252 = (2 * 252) / 7 = 72 students\n\nSubgoal 3: Calculate the number of remaining students.\nTotal students = 252\nSigned up = 72\nRemaining students = 252 - 72 = 180\n\nSubgoal 4: Determine how many of the remaining students will sign up.\n3/8 of remaining students will sign up\n3/8 of 180 = (3 * 180) / 8 = 67.5, rounded down to 67\n\nSubgoal 5: Sum the total number of students going on the trip.\nStudents already signed up = 72\nAdditional students signing up = 67\nTotal students = 72 + 67 = 139\n\nTherefore, 139 students will be going on the field trip.",
                "Explanation": "The Dynamic Subgoal prompt clearly identifies and solves each subgoal step-by-step, leading to the correct final answer. The baseline CoT prompt also arrives at the correct solution, but the reasoning steps are not as clearly delineated into subgoals. Explicitly structuring the problem into subgoals can make the reasoning process easier to follow and less error-prone."
            }
        },
        "Fallback Plan": "If Dynamic Subgoal Prompting does not outperform the baselines, we can: 1) Analyze the generated subgoals and solutions to see if they are relevant and correct. This can help identify if the issue lies in subgoal identification or solving. 2) Experiment with different prompt formats and few-shot examples to see if the subgoal decomposition can be better elicited. 3) Test if the method works better on certain problem types (e.g., algebra vs. geometry) to gain insights. 4) Collect human annotations for subgoals on a subset of problems and see if providing these gold subgoals in the prompt improves performance, to decouple subgoal identification from solving. The results can be turned into an analysis paper that sheds light on the capabilities and limitations of language models for complex reasoning."
    }
}