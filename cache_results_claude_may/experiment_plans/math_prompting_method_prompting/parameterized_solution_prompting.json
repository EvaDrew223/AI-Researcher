{
    "topic_description": "novel prompting methods for large language models to improve mathematical problem solving",
    "idea_name": "Parameterized Solution Prompting",
    "raw_idea": {
        "Problem": "Large language models can adapt a solution strategy to problems with different values of the same parameters, but often fail to generalize to problems with additional parameters not seen in the prompt.",
        "Existing Methods": "Current methods use few-shot prompts with a fixed set of problems as exemplars, which have limited variation in problem parameters.",
        "Motivation": "To robustly solve a class of math problems with varying parameters, models need to learn a parameterized solution strategy that explicitly takes into account all relevant parameters and their dependencies. We can use prompting to demonstrate such a strategy and guide the model to internalize it.",
        "Proposed Method": "We propose Parameterized Solution Prompting (PSP), which prompts the model with a few-shot set of problems that vary all relevant parameters. For each problem, the prompt includes: 1) A specification of all parameters and their values. 2) A complete solution that explicitly states the dependence on each parameter. 3) A question that changes the value of one or more parameters. 4) A modified solution that updates the parameter-dependent steps based on the new values. After the few-shot examples, the original test problem is prompted as a question that specifies the parameters. The model is expected to generate a solution using the parameterized strategy.",
        "Experiment Plan": "Evaluate PSP on the MATH benchmark including the interpolation and extrapolation sets with varied parameters. Compare to standard few-shot CoT prompting. Analyze the parameter-dependence in generated solutions and robustness to parameter variations."
    },
    "full_experiment_plan": {
        "Title": "Parameterized Solution Prompting: Improving Mathematical Problem Solving in Large Language Models",
        "Problem Statement": "Large language models can adapt a solution strategy to problems with different values of the same parameters, but often fail to generalize to problems with additional parameters not seen in the prompt.",
        "Motivation": "Current few-shot prompting methods use a fixed set of problems as exemplars, which have limited variation in problem parameters. This makes it difficult for models to learn a parameterized solution strategy that explicitly takes into account all relevant parameters and their dependencies. By prompting the model with a few-shot set of problems that vary all relevant parameters and demonstrating a parameterized solution strategy, we aim to guide the model to internalize this strategy and robustly solve a class of math problems with varying parameters.",
        "Proposed Method": "Parameterized Solution Prompting (PSP) involves prompting the model with a few-shot set of problems that vary all relevant parameters. For each problem, the prompt includes: 1) A specification of all parameters and their values. 2) A complete solution that explicitly states the dependence on each parameter. 3) A question that changes the value of one or more parameters. 4) A modified solution that updates the parameter-dependent steps based on the new values. After the few-shot examples, the original test problem is prompted as a question that specifies the parameters. The model is expected to generate a solution using the parameterized strategy.",
        "Step-by-Step Experiment Plan": {
            "Step 1: Gather Datasets": "Evaluate PSP on the MATH benchmark, including the interpolation and extrapolation sets with varied parameters. Use the accuracy metric for evaluation.",
            "Step 2: Construct Prompts": "1) Baseline prompt: Standard few-shot chain-of-thought (CoT) prompting with 5 exemplars.\n2) PSP prompt: For each exemplar, include: a) Parameter specification, e.g., 'Let r be the radius and h be the height of a cylinder.', b) Parameterized solution, e.g., 'The volume V of a cylinder is given by V = \u03c0r^2h.', c) Question with changed parameter, e.g., 'What is the volume if r is doubled and h is halved?', d) Updated solution, e.g., 'The new radius is 2r and new height is h/2. So the new volume is V_new = \u03c0(2r)^2(h/2) = 2\u03c0r^2h = 2V.' After the exemplars, prompt with the test question specifying parameters.",
            "Step 3: Select Models": "Evaluate the prompts on GPT-3.5 (text-davinci-003) and GPT-4 via the OpenAI API.",
            "Step 4: Get Results": "For each model and prompt type, generate solutions for the test problems in the MATH benchmark.",
            "Step 5: Analyze Results": "Compute the accuracy of the generated solutions for each model and prompt type. Compare the performance of PSP to the CoT baseline. Analyze the parameter-dependence in the generated solutions and robustness to parameter variations between PSP and CoT."
        },
        "Test Case Examples": {
            "Baseline Prompt Input (Few-Shot CoT)": "Q: The volume of a cylinder is 48\u03c0 cubic meters. If the height is 3 meters, what is the radius?\nA: Let's solve this step by step:\n1) The formula for the volume of a cylinder is V = \u03c0r^2h, where r is the radius and h is the height.\n2) We are given that the volume V is 48\u03c0 cubic meters and the height h is 3 meters.\n3) Substituting these values into the formula, we get: 48\u03c0 = \u03c0r^2(3)\n4) Simplifying: 48\u03c0 = 3\u03c0r^2\n5) Dividing both sides by 3\u03c0: 16 = r^2\n6) Taking the square root of both sides: r = 4\nTherefore, the radius of the cylinder is 4 meters.\n\nQ: The volume of a cylinder is 72\u03c0 cubic inches. If the radius is 6 inches, what is the height?\nA: Let's solve this step by step:\n1) The formula for the volume of a cylinder is V = \u03c0r^2h, where r is the radius and h is the height.\n2) We are given that the volume V is 72\u03c0 cubic inches and the radius r is 6 inches.\n3) Substituting these values into the formula, we get: 72\u03c0 = \u03c0(6)^2h\n4) Simplifying: 72\u03c0 = 36\u03c0h\n5) Dividing both sides by 36\u03c0: 2 = h\nTherefore, the height of the cylinder is 2 inches.\n\nQ: A cylindrical tank has a radius of 5 meters and a height of 8 meters. What is the volume of the tank?",
            "Baseline Prompt Expected Output (Few-Shot CoT)": "Let's solve this step by step:\n1) The formula for the volume of a cylinder is V = \u03c0r^2h, where r is the radius and h is the height.\n2) We are given that the radius r is 5 meters and the height h is 8 meters.\n3) Substituting these values into the formula, we get: V = \u03c0(5)^2(8)\n4) Simplifying: V = 25\u03c0(8) = 200\u03c0\nTherefore, the volume of the cylindrical tank is 200\u03c0 cubic meters.",
            "Proposed Prompt Input (PSP)": "Let r be the radius and h be the height of a cylinder. The volume V of a cylinder is given by V = \u03c0r^2h.\n\nQ: If r = 3 and h = 4, what is V?\nA: Substituting r = 3 and h = 4 into the formula, we get:\nV = \u03c0(3)^2(4) = 36\u03c0\nSo the volume is 36\u03c0 cubic units.\n\nQ: What is V if r is doubled and h is halved?\nA: The new radius is 2r = 6 and the new height is h/2 = 2. Substituting these into the formula:\nV_new = \u03c0(6)^2(2) = 72\u03c0\nSo the new volume is 72\u03c0 cubic units, which is double the original volume.\n\nQ: A cylindrical tank has a radius of 5 meters and a height of 8 meters. What is the volume of the tank?",
            "Proposed Prompt Expected Output (PSP)": "Let r = 5 and h = 8 be the radius and height of the cylindrical tank, respectively. \nSubstituting into the volume formula V = \u03c0r^2h, we get:\nV = \u03c0(5)^2(8) = 25\u03c0(8) = 200\u03c0\nTherefore, the volume of the cylindrical tank is 200\u03c0 cubic meters.",
            "Explanation": "The PSP prompt demonstrates a parameterized solution that explicitly states the dependence on the radius r and height h, and shows how to update the solution when these parameters change. This guides the model to generate a solution for the test problem that correctly substitutes the given parameter values and arrives at the right answer. In contrast, the few-shot CoT prompt does not emphasize the parametric nature of the solution, making it harder for the model to adapt to problems with different parameter values."
        },
        "Fallback Plan": "If PSP does not outperform the CoT baseline, we can analyze the generated solutions to understand why. Potential issues could be: 1) The model fails to identify and extract the relevant parameters from the question. 2) The model fails to generate a solution that explicitly states the parametric dependence. 3) The model fails to correctly update the parameter values and modify the solution accordingly. Based on which of these issues are prevalent, we can modify the prompt to better guide the model, e.g., by including an intermediate step to explicitly extract parameters, or by providing more diverse examples of updating parameter values. If the model still struggles to generalize to problems with novel parameters, we can turn the project into an analysis of the limitations of prompting for mathematical problem solving and suggest alternative approaches, such as fine-tuning the model on a large dataset of parameterized problems."
    }
}